몬스터 데이터 추가할 것.

SDMonster

몬스터 엑셀파일 작성하고 프리팹 만들어넣음.
이제 몬스터 돌아다녀야해서 길찾기 해야 함.

컴포넌트에 Nav Mesh Agent랑 Static 있는데 에이전트 붙여주자.

에이전트 컴포넌트 붙이면 원기둥같은게 생김. 이 원기둥이 Nav Mesh Agent에 설정된 Obstacle Avoidance 부분임.
해당 반지름과 높이로 설정되어 있는데 이정도의 부피를 가지고 맵에 맞게 네비게이션을 만들건데 그 지도상에서 움직일 때 이만큼의 부피를 가지고 움직인다고 설정하는 것.
알맞은 부피 가지게 수정해주자.

그리고 Streering 있는데 거기에 Stopping Distance 필드가 있음.
이동 관련 부분인데 나중에 코드로 지도같은거 미리 만들게 될것인데 얘들이 어디로 이동할건지 목표 위치를 설정하면 Nav Mesh 이용해서 설정하는 것. 안에 별도의 메소드가 있어서.
그래서 설정하면 알아서 장애물 피해서 해당 위치로 이동하게 될 텐데 목표 위치와의 거리가 얼마만큼이 되면 멈출건지에 대한 값.
이 값을 1로 해줌.
이 때 Auto Braking이 설정되어 있으면 멈춤.

얘들도 캐릭터처럼 애니메이션 컨트롤러 작성해서 넣어줘야 함.
Animator Override Controller

얘들의 base를 액터 애님으로 넣어주고 나중에 몬스터에 맞는 모션 넣어주면 됨.
지금 안넣어도 기본 모션 나갈거라 괜찮음.

레이어도 넣어줌 Monster로

사용할 때 BO 만들어서 사용하면 됨.

원래 진짜 Rpg면 기획데이터로 BoMonster만들지 않고 서버에서 Monster 만들면 그 정보 받아와서 Monster 테이블 참조해서 데이터 가져오는 식임. 스폰 이런건 서버에서 함.

Monster 클래스 작성. 자주 생성, 제거되는게 빈번하니까 그런 객체를 우리는 ObjectPool 쓰기로 했고 IPoolableObject 상속.

지금은 안쓰지만 patrolWaitTime 작성. 정찰 구역을 설정하고 여기서 랜덤한 위치를 맵 내에서 돌아다닐 것. 여기서 유효한 위치 찾아서 정찰을 하게되는데 detectionRange 내에 적이 없으면 정찰 범위까지 가고 일정시간 대기하게 될 것인데 그거 말함.

private NavMeshPath path;

이거는 구현할 때 설명함.

메소드 구현 초기화랑 SetStats.
지금 레벨에 따라 뭔가 구현하고 있지 않으니 나중에 레벨이나 스탯이나 경험치등 변경할 수 있을 것.

Nav Mesh는 나중에 맵 만들텐데 이거 가지고 설명함.


이제 몬스터 생성하는 작업이 필요함. 스테이지 변경 됐을 때 특정 시간마다 몬스터가 스폰되게 만들면 됨.
게임에 따라 다를테지만 특정 조건에 따라 스폰한다던가.
기본적으로 시간에 따라 스폰함. 몇가지 필요한 상수 데이터를 Define에 정의.
최소 몬스터 스폰 수라던가.

이후 스테이지 매니저에서 스폰타임 변수 작성.
그리고 몬스터 홀더 작성.

그리고 맵마다 몬스터가 스폰되는 구간이 있을 것. 이 스폰구역 정보 들고있을 딕셔너리 생성.


Bounds
이건 유니티 구조체. 다양한 곳에서 쓰임. 범위와 비슷함.

스폰시킴. 스폰시간 정해주고.
각종 매니저들 들고 와서 SD데이터 들고 있게 하고.
랜덤 인덱스 생성해서 인덱스로 몬스터 기획데이터 들고옴.

이제 오브젝트 풀에서 몬스터 찾을 때 몬스터 Name가지고 SD몬스터 데이터에서 리소스패스에서 리소스 빼서 프리팹 이름으로만 몬스터 이름 가지고 와서 찾을건데 이렇게 string 자꾸 생성하는건 좋은 방식이 아님.

그리고 몬스터 가져오고 위치 설정해줘야 함.

스폰 에어리어 바운스에서 가져올 것.

그리고 스폰 위치 설정하고 트랜스폼 위치 설정하고 홀더에 넣고 초기화하고 배틀매니저 넣기.

StaticDataModule 가서 리스트 넣고 로더에서 로드.

그리고 스테이지 프리팹가서 SpawnPosHolder 만들기.
그 아래 SpawnPos 만들기.

Bounds 는 유니티 구조체고 영역을 나타냄. 그런데 우리는 영역 나타내는 컴포넌트 본 적이 있음. 콜라이더.
콜라이더도 충돌 영역을 나타냄. 어떤 콜라이더를 달았을 때 우리 눈에 보이는 해당 콜라이더의 영역이 Gizmo로 보이게 됨. 이 영역에 대한 데이터만 빼온게 Bounds가 되는 것임.
그래서 콜라이더 붙여놓고 Bounds 만 빼와서 사용하면 되는 것.
이 콜라이더의 중앙이 Bounds의 Center가 되게 됨. 

SD데이터 상의 spawnArea 는 구역을 의미함. SpawnPosHolder 만들었는데 여기의 몇번째 자식 객체인지를 뜻함.
여러 SpawnPos 가 있다면 자식 객체 따라서 임의로 인덱스를 매기는 것.
0번이면 가장 위엣놈이 불림.
그리고 트리거 체크 꼭 해놔야함 콜라이더에.

그리고 체인지 스테이지에서 정보 예전꺼 비우고 지금꺼 다시 생성하는 내용 작성.

스테이지 체인지 컴플릿에서 호출.

그리고 이제 델타타임 썼으니 업데이트 함. 근데 문제는 얘는 싱글톤임. 계속 살아있는데 무한 업데이트하면 안됨. 씬 전환도중에 굴려져선 안되니까. 그래서 얘가 언제 업데이트 할 수 있고 안되는건지 트리거할 값 만듦.
불값으로. 체인지 스테이지 들어가면 안되게 하고 컴플리트하면 되게.



