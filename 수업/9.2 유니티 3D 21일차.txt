아이템 이미지들 FlatUI에서 가져옴.
Resources폴더에 Sprite만들고 
원래 여기서 Create->2D  가면 SpriteAtlas가 있어야 하는데 지금 없음
Window -> Package Manager 들어가서 Unity Registry 들어가서 2D Sprite 설치.

이제 Resources Sprite 폴더에 Create-> 2D-> SpriteAtlas 만들기.

그리고 ProjectSetting의 SpritePacker를 SpriteAtlas V1- always로 해주면 됨.

이제 다 따로 있는 스프라이트 텍스쳐를 하나의 파일에 다 올리는 것.
텍메프 만들 때 폰트를 텍스쳐로 구워서 하나의 파일로 만들었었음. 

이제 스프라이트 패킹을 해서 그렇게 만들어줄 것. 폴더를 통채로 그냥 패킹에 넣어도 인식함.

이제 런타임에서 가져다 쓰는건 어떻게 하나. 리소스 매니저에서 SpriteLoad로 접근해서 Atlas 불러옴.

GetSprite에서 가져오고 싶은 Sprite이름 넘겨주면 Sprite 만들어서 반환해주게.

프리팹 만들기 위해 인게임 씬으로 이동. 아이템도 2D니까 빌보드 기법 이용해서 보이게 해줘야 함.

WorldUICanvas 에서 Image 추가하고 Item이라고 함.
그리고 플레이어가 이 아이템을 먹을 수 있어야 함. 아이템 충돌하면 먹을지 키누르면 먹을지 이런것들.
아이템 자체에 콜라이더 달아서 먹게 만들 것.

근데 얘는 2D인데 3d 콜라이더 들고 있어야 함. is Trigger 체크

그리고 코드 작성해서 붙여주자. 

얘도 몬스터처럼 빈번하게 생성되고 지워지니 오브젝트 풀 사용.

Define에 Enum 생성

아이템 스태틱 데이터 만듦.

스텟 영향 끼치는거 문자열로 받아서 리플렉트같은거 써서 찾아서 해주면 됨.

그리고 모듈에서 로더로 로드도 해주고.
엑셀도 만들어주고.

그리고 HpBar 미리 만들어와서 풀 생성해놓은 것처럼 아이템도 Prefabs에서 불러와서 로드해놓음.
리소스 매니저에서 .

그리고 Item 작성하고 이니셜라이즈할 때 아이템 드랍될 때고 SpriteLoader에서 불러옴.

그리고 아이템 먹기 위해 OnTriggerEnter 작성.

그리고 당연히 boItem을 별도로 만들어서 사용.
그리고 DtoItem은 나중에 별도로 처리.

장비 아이템을 위한 데이터도 만들기.

DtoItem도 만들기

BoItem, BoEquipment
얘네가 SDItem을 파라미터로 받는 생성자가 있음. 이걸로 클라에서 몹을 잡고 드랍된 아이템 정보 받아서 데이터 생성만 가능함.

그리고 DtoItem은
BoItem 정보를 받아서 Dto로 변환 후 DB 저장 할 것.

DtoItem은 별도의 데이터셋을 만들것임.

DtoItemElement 그리고 이제 로그인 할 때 아이템 정보 불러오게 할것.

그리고 INetWorkClient감 GetItem 작성
그리고 ServerModuleDummy에서 GetItem 작성.
그리고 UserDataSo에 dtoItem 추가.

그리고 LoginHandler에서 itemHandler 리스폰스 핸들러 달고 GetItemSuccess 메소드 구현.

그리고 BoUser에 boItem 추가
그리고 로그인 핸들러에서 GetItem Success 구현
그리고 타입 비교할 필요 없이 아이템 index 범위 정해놓으면 좋은데 아니니까 타입 비교해서 캐스팅.

이제 몬스터에서 드랍 